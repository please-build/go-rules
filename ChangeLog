Version 1.7.1
------------
    * Added missing `resources` option to `go_benchmark` (#121)
    * Make modinfo require go (#123)

Version 1.7.0
------------
    * Add `ModFile` config option which when set will resolve all `go_repo()` targets against the
      modules in this file. This doesn't do a huge amount but will avoid situations where you had
      to previously pass in modules through the `requirements` arg to `go_repo()` (#118)
    * Pass in the generated `go_asm.h` file when compiling asm sources with `go_library()` (#116)

Version 1.6.0
------------
    * Rename `go_get` to `go_repo` and make it generally available (#102)

Version 1.5.0
-------------
    * Added support for compiling the Go stdlib in-repo independent of `go_toolchain`, via
      `stdlib` config argument and `go_stdlib` rule (#93).
    * Added support for Go build modes (which require the use of `go_stdlib` to compile correctly) (#93)

Version 1.4.1
-------------
    * Fix issue with missing stderr on test output when not using the new coverage redesign feature flag

Version 1.4.0
-------------
    * Improve support for case sensitive module names (#86)
    * Handle large source directories by passing srcs as file (#90)
    * Add an install argument to the beta `go_get()` rules to make them work more like `go_module()` (#87)

Version 1.3.0
-------------
    * Support for Go 1.20's coverage redesign (#84)
    * Added `go_system_toolchain` for adding a build of a toolchain off the local system
      (useful for 1.20 on a system where one cannot be downloaded, notably Alpine Linux) (#85)

Version 1.2.1
-------------
    * Go package info now gets written for the main package of a go_binary

Version 1.2.0
-------------
    * Support for Go 1.20 (#75)

Version 1.1.4
-------------
    * Don't generate Go package info targets when not generating import config

Version 1.1.3
-------------
    * Remove hashes test as the arch subrepo labels break things

Version 1.1.2
-------------
    * Fix some issues with package info generation when go sources are in a subdirectory

Version 1.1.1
-------------
    * Use sha256 only for hashes

Version 1.1.0
-------------
    * Add `go_get()`, a subrepo based approach to third party code #49
    * Add a package driver to the releases. This can be used to help tools
      integrate with Please projects. This can be set via GOPACKAGESDRIVER
      env var and is used by a number of tools in the wild, include gopls
      and various linters.
    * Backport a fix to the cgo code generation to include compiler flags,
      and package configuration #64

Version 1.0.0
-------------
    * Separate the CGO rules and use the C plugin instead of built in
      rules #27

Version 0.5.1
-------------
    * Fix the CGO config options in the go_toolchain() rule #44
    * Fix the compiler flags on the cgo rules #43
    * Trim path when cross-compiling the toolchain #40

Version 0.5.0
-------------
    * Add `env` to `go_test`, allowing specifying extra env vars.

Version 0.4.4
-------------
    * Remove additional 'test' labels on libraries.

Version 0.4.3
-------------
    * Expose go_binary sources when included as a go_test dependency (#35)
    * Fix `go_library` for 1.19 to include package name when compiling.

Version 0.4.2
-------------
    * Fix assembly for go_library for Go 1.19

Version 0.4.1
-------------
    * Fix assembly for Go 1.19 (#33)

Version 0.4.0
-------------
    * Add config option to make licences mandatory (#25)
    * Add basic split debug info support (#26)
    * Fix embedding directories by name (#28)

Version 0.3.2
-------------
    * Update to use new version of the tools which handles no tests #24

Version 0.3.1
-------------
    * Handle when test targets have no tests #20

Version 0.3.0
-------------
    * Add config option to allow legacy imports #18

Version 0.2.4
-------------
    * Use the `please-go-vx.x.x` release tags for the tools

Version 0.2.3
-------------
    * Import the test version of internal packages when calculating
      coverage

Version 0.2.2
-------------
    * Handle hyphens in source file names when generating cover vars

Version 0.2.1
-------------
    * Make the tool as binary

Version 0.2.0
-------------
    * Improve the way we handle discovering coverage variables #7
    * Remove usage of the legacy external flag

Version 0.1.1
-------------
    *  Merge the please tools into please_go #3

Version 0.1.0
-------------
    *  Initial release
